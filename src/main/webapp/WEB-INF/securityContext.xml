<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security.xsd">
      
                           

    <security:global-method-security secured-annotations="enabled" />
    
   <bean id="dataSource" 
	      class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	      <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	      <property name="url" value="jdbc:mysql://localhost:3306/movies"/>
	      <property name="username" value="root"/>
	      <property name="password" value="root"/>
	   </bean>
	   

    
    <security:http auto-config="true">
        <!-- Restrict URLs based on role -->
        <security:intercept-url pattern="/AddCategory" access="hasRole('ROLE_ADMIN')" />
        
        <security:intercept-url pattern="/**" access="permitAll" />
        
        <!-- Override default login and logout pages -->
        <security:form-login login-page="/" 
        					 username-parameter="email"
        					 password-parameter="password"
                             default-target-url="/" 
                             authentication-failure-url="/login?error=InvalidLogin" />
        <security:logout logout-url="/logout" logout-success-url="/" />
        
         <security:csrf disabled="true"/>
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider >
            
            <security:jdbc-user-service data-source-ref="dataSource" users-by-username-query="select email,password,active from profiles where email=?" authorities-by-username-query="SELECT EMAIL,ROLE FROM PROFILES where EMAIL=?" />
            
        </security:authentication-provider>
    </security:authentication-manager>

</beans>